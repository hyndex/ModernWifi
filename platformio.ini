[env]
; Common settings for all environments
framework = arduino
monitor_speed = 115200

; Common library dependencies
lib_deps =
    https://github.com/bblanchon/ArduinoJson
    DNSServer

; Build modes - choose one by uncommenting
; 1. Ultra Light Mode - API only, no HTML interface
; build_flags = -DBUILD_MODE_ULTRA_LIGHT

; 2. Light Mode - Simple HTML interface with minimal assets
; build_flags = -DBUILD_MODE_LIGHT

; 3. Normal Mode - Full featured interface with branding (default)
build_flags = -DBUILD_MODE_NORMAL

; ESP32 environment (supports all variants: 32, S2, S3, C2, C3, C5, C6)
[env:esp32]
platform = espressif32
board = esp32dev
lib_deps =
    ${env.lib_deps}
    https://github.com/ESP32Async/AsyncTCP
    https://github.com/ESP32Async/ESPAsyncWebServer
    Update
    FS
    SPIFFS
build_flags = 
    ${env.build_flags}
    -DUSE_HTTPS
    -DWEBSERVER_HTTPS
    -DENABLE_MDNS
    -DENABLE_STATISTICS
    -DENABLE_CUSTOM_PARAMETERS
    ; Uncomment to enable serial monitor in the web interface
    ; -DENABLE_SERIAL_MONITOR
board_build.filesystem = spiffs
board_build.partitions = huge_app.csv
monitor_filters = esp32_exception_decoder
monitor_rts = 0
monitor_dtr = 0

; ESP32-S3 environment
[env:esp32-s3-devkitc-1]
extends = env:esp32
board = esp32-s3-devkitc-1

; RP2040 environment (Raspberry Pi Pico W, RP2350)
[env:pico]
platform = https://github.com/earlephilhower/platform-raspberrypi.git
board = pico
framework = arduino
lib_deps =
    ${env.lib_deps}
    https://github.com/khoih-prog/AsyncTCP_RP2040W
    https://github.com/khoih-prog/AsyncWebServer_RP2040W
build_flags = 
    -DENABLE_STATISTICS
    -DENABLE_CUSTOM_PARAMETERS
    -DUSING_RP2040
    -DARDUINO_ARCH_RP2040
    -DRASPBERRY_PI_PICO_W
    ; Uncomment to enable serial monitor in the web interface
    ; -DENABLE_SERIAL_MONITOR
board_build.filesystem = littlefs
board_build.core = earlephilhower

; AVR environment (uncomment and configure as needed)
;[env:avr]
;platform = atmelavr
;board = uno
;lib_deps =
;    ${env.lib_deps}
;    WiFi101
;    SD

; STM32 environment (uncomment and configure as needed)
;[env:stm32]
;platform = ststm32
;board = nucleo_f401re
;lib_deps =
;    ${env.lib_deps}
;    STM32duino WiFi
;    SD

; NXP environment (uncomment and configure as needed)
;[env:nxp]
;platform = nxplpc
;board = lpc1768
;lib_deps =
;    ${env.lib_deps}
;    WiFi
;    SD